- name: Install dependencies
  become: true
  tags: [never, privileged]
  ansible.builtin.package:
    name:
      - xclip
    state: present

- name: Install
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.local/bin/mise use --global ubi:pythops/tmux-linux-binary[rename_exe=tmux]
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/mise/installs/ubi-pythops-tmux-linux-binary"
  # Due to glibc issues, tmux is best installed via nixpkgs on NixOS
  when: ansible_distribution != "NixOS"

- name: Clone Config
  ansible.builtin.git:
    repo: "{{ github_prefix }}ll-nick/tmux-config.git"
    dest: "{{ ansible_env.HOME }}/.config/tmux"
  ignore_errors: true
  register: tmux_config

- name: Clone TPM
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ ansible_env.HOME }}/.config/tmux/plugins/tpm"
    force: "true"

- name: Install Plugins
  ansible.builtin.shell: "bash {{ ansible_env.HOME }}/.config/tmux/plugins/tpm/bin/install_plugins"
  when: tmux_config.changed

- name: Add bash config
  ansible.builtin.copy:
    src: tmux.bash
    dest: "{{ ansible_env.HOME }}/.config/bash/tmux.bash"

- name: Add nushell config
  ansible.builtin.copy:
    src: tmux.nu
    dest: "{{ ansible_env.HOME }}/.config/nushell/autoload/tmux.nu"

- name: Check if systemd is available
  ansible.builtin.shell: command -v systemctl
  register: systemd_available
  ignore_errors: true
  changed_when: false

- when: systemd_available.rc == 0
  block:
    - name: Ensure systemd user service directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/systemd/user"
        state: directory

    - name: Install autostart service
      ansible.builtin.copy:
        src: tmux.service
        dest: "{{ ansible_env.HOME }}/.config/systemd/user/tmux.service"

    - name: Enable autostart service
      ansible.builtin.systemd:
        unit: tmux
        enabled: true
        scope: user

