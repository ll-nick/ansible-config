- name: Ensure Directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    state: directory

- name: Get latest release data
  ansible.builtin.uri:
    url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
  register: lazygit_latest_release

- name: Set latest version
  set_fact:
    lazygit_latest_release_version: "{{ lazygit_latest_release.json.tag_name | regex_replace('^v', '') }}"

- name: Check if lazygit is installed
  ansible.builtin.shell: command -v lazygit
  register: lazygit_installed
  ignore_errors: true

- name: Check installed version
  when: lazygit_installed.rc == 0
  ansible.builtin.shell: lazygit --version | grep -o ', version=[^,]*' | awk -F= '{print $2}'
  args:
    executable: /bin/bash
  ignore_errors: true
  changed_when: false
  failed_when: false
  register: lazygit_installed_version

- name: Install
  when: lazygit_installed.rc != 0 or lazygit_installed_version.stdout is version(lazygit_latest_release_version, "!=")
  ansible.builtin.unarchive:
    src: "https://github.com/jesseduffield/lazygit/releases/download/v{{ lazygit_latest_release_version }}/lazygit_{{ lazygit_latest_release_version }}_Linux_x86_64.tar.gz"
    dest: "{{ ansible_env.HOME }}/.local/bin/"
    remote_src: yes

- name: Add bash config
  ansible.builtin.copy:
    src: lazygit.bash
    dest: "{{ ansible_env.HOME }}/.config/bash/lazygit.bash"

- name: Ensure config directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/lazygit"
    state: directory

- name: Add lazygit config
  ansible.builtin.copy:
    src: config.yml
    dest: "{{ ansible_env.HOME }}/.config/lazygit/config.yml"

