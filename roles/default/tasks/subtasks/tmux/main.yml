- name: tmux // Install dependencies
  become: true
  tags: [never, privileged]
  ansible.builtin.package:
    name:
      - xclip
    state: present

- name: tmux // Check installed version
  command: tmux -V
  ignore_errors: true
  changed_when: false
  failed_when: false
  register: tmux_installed_version

- when: tmux_installed_version.rc != 0 or tmux_installed_version.stdout.split()[1] is version(tmux_version, "!=")
  block:
    - import_tasks: install_prebuilt_binary.yml
      when: ansible_architecture == "x86_64"

    - import_tasks: from_source.yml
      when: ansible_architecture != "x86_64"

- name: tmux // Clone Config
  ansible.builtin.git:
    repo: "https://github.com/ll-nick/tmux-config.git"
    dest: "{{ ansible_env.HOME }}/.config/tmux"
    force: "true"
  register: tmux_config

- name: tmux // Clone TPM
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ ansible_env.HOME }}/.config/tmux/plugins/tpm"
    force: "true"

- name: tmux // Install Plugins
  ansible.builtin.shell: "bash {{ ansible_env.HOME }}/.config/tmux/plugins/tpm/bin/install_plugins"
  when: tmux_config.changed

- name: tmux // Add bash config
  ansible.builtin.copy:
    src: bash/tmux.bash
    dest: "{{ ansible_env.HOME }}/.config/bash/tmux.bash"

- name: tmux // Ensure systemd user service directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/systemd/user"
    state: directory

- name: tmux // Install autostart service
  ansible.builtin.copy:
    src: systemd/tmux.service
    dest: "{{ ansible_env.HOME }}/.config/systemd/user/tmux.service"

- name: tmux // Enable autostart service
  ansible.builtin.systemd:
    unit: tmux
    enabled: true
    scope: user

