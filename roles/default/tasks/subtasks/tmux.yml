- name: tmux // Install dependencies
  become: true
  tags: [never, privileged]
  ansible.builtin.package:
    name:
      - autoconf
      - automake
      - bison
      - xclip
    state: present

- name: tmux // Install arch dependencies
  become: true
  tags: [never, privileged]
  ansible.builtin.package:
    name:
      - base-devel
      - libevent
      - ncurses
      - pkgconf
    state: present
  when: ansible_distribution == "Archlinux"

- name: tmux // Install debian dependencies
  become: true
  tags: [never, privileged]
  ansible.builtin.package:
    name:
      - build-essential
      - libevent
      - libevent-dev
      - ncurses
      - ncurses-dev
      - pkg-config
    state: present
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: tmux // Check installed version
  command: tmux -V
  ignore_errors: true
  changed_when: false
  failed_when: false
  register: tmux_installed_version

- when: tmux_installed_version is failed or tmux_installed_version.stdout.split()[1] is version(tmux_version, "!=")
  block:
    - name: tmux // Clone tmux
      ansible.builtin.git:
        repo: "https://github.com/tmux/tmux.git"
        dest: "/tmp/tmux-{{ tmux_version }}"
        depth: 1
        version: "{{tmux_version}}"

    - name: tmux // Autogen
      command: sh autogen.sh
      args:
        chdir: "/tmp/tmux-{{ tmux_version }}"
        creates: "/tmp/tmux-{{ tmux_version }}/configure"

    - name: tmux // Configure
      command: ./configure --prefix={{ ansible_env.HOME }}/.local
      args:
        chdir: "/tmp/tmux-{{ tmux_version }}"
        creates: "/tmp/tmux-{{ tmux_version }}/Makefile"

    - name: tmux // Make
      command: make
      args:
        chdir: "/tmp/tmux-{{ tmux_version }}"
        creates: "/tmp/tmux-{{ tmux_version }}/tmux"

    - name: tmux // Install
      command: make install
      args:
        chdir: "/tmp/tmux-{{ tmux_version }}"

    - name: tmux // Remove build directory
      ansible.builtin.file:
        path: "/tmp/tmux-{{ tmux_version }}"
        state: absent

- name: tmux // Clone Config
  ansible.builtin.git:
    repo: "https://github.com/ll-nick/tmux-config.git"
    dest: "{{ ansible_env.HOME }}/.config/tmux"
    force: "true"
  register: tmux_config

- name: tmux // Clone TPM
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "{{ ansible_env.HOME }}/.config/tmux/plugins/tpm"
    force: "true"

- name: tmux // Install Plugins
  ansible.builtin.shell: "bash {{ ansible_env.HOME }}/.config/tmux/plugins/tpm/bin/install_plugins"
  when: tmux_config.changed

- name: tmux // Add bash config
  ansible.builtin.copy:
    src: bash/tmux.bash
    dest: "{{ ansible_env.HOME }}/.config/bash/tmux.bash"

- name: tmux // Ensure systemd user service directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/systemd/user"
    state: directory

- name: tmux // Install autostart service
  ansible.builtin.copy:
    src: systemd/tmux.service
    dest: "{{ ansible_env.HOME }}/.config/systemd/user/tmux.service"

- name: tmux // Enable autostart service
  ansible.builtin.systemd:
    unit: tmux
    enabled: true
    scope: user

