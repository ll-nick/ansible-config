- name: Install Debian dependencies
  become: true
  tags: [never, privileged]
  ansible.builtin.package:
    name:
      - unzip # clangd
    state: present

- name: Get glibc version
  command: ldd --version
  register: ldd_output
  changed_when: false

- name: Parse glibc version from ldd output
  set_fact:
    glibc_version: "{{ ldd_output.stdout_lines[0].split()[-1] }}"

- name: Install for newer glibc versions
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.local/bin/mise use --global neovim
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/mise/installs/neovim"
  when: glibc_version is version('2.32', '>=')

- name: Install for older glibc versions
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.local/bin/mise use --global github:neovim/neovim-releases
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/mise/installs/github-neovim-neovim-releases"
  when: glibc_version is version('2.32', '<')

- name: Clone Config
  ansible.builtin.git:
    repo: "{{ github_prefix }}ll-nick/neovim-config.git"
    dest: "{{ ansible_env.HOME }}/.config/nvim"
  ignore_errors: true

- name: Add bash config
  ansible.builtin.copy:
    src: nvim.bash
    dest: "{{ ansible_env.HOME }}/.config/bash/nvim.bash"

- name: Add nushell config
  ansible.builtin.copy:
    src: nvim.nu
    dest: "{{ ansible_env.HOME }}/.config/nushell/autoload/nvim.nu"

